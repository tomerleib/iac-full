name: Build and Release Apps

on:
  push:
    branches: [main]
    paths:
      - 'apps/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/**'

permissions:
  contents: write
  packages: write

jobs:
  detect-changes:
    name: Detect Changed Apps
    runs-on: ubuntu-latest
    outputs:
      changed_apps: ${{ steps.format-output.outputs.changed_apps }}
    steps:
      - uses: actions/checkout@v4

      - id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: apps/**

      - id: format-output
        run: |
          if [ -n "${{ steps.changed-files.outputs.all_changed_files }}" ]; then
            # Extract unique app directory names from changed files
            app_dirs=$(echo "${{ steps.changed-files.outputs.all_changed_files }}" | grep -o 'apps/[^/]*' | sort | uniq | sed 's|apps/||g')
            
            # Convert to JSON array
            json_array="["
            first=true
            while IFS= read -r app; do
              if [ "$first" = true ]; then
                first=false
              else
                json_array="$json_array,"
              fi
              json_array="$json_array\"$app\""
            done <<< "$app_dirs"
            json_array="$json_array]"
            
            echo "changed_apps=$json_array" >> $GITHUB_OUTPUT
          else
            echo "changed_apps=[]" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    name: Build and Push Apps
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: ${{ fromJson(format('["{0}"]', needs.detect-changes.outputs.changed_apps)) }}
    if: needs.detect-changes.outputs.changed_apps != ''
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract app name
        id: appname
        run: |
          app_path=${{ matrix.app }}
          app_name=$(basename $app_path)
          echo "app_name=$app_name" >> $GITHUB_OUTPUT

      - name: Bump Semantic Version (per app)
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          default_bump: patch
          tag_prefix: "${{ steps.appname.outputs.app_name }}_v"
          create_annotated_tag: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./apps/${{ steps.appname.outputs.app_name }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.appname.outputs.app_name }}:${{ steps.tag_version.outputs.new_tag }}

      - name: Scan Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.appname.outputs.app_name }}:${{ steps.tag_version.outputs.new_tag }}
          severity: CRITICAL
