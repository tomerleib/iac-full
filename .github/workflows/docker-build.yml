name: Build and Release Apps

on:
  push:
    branches: [main]
    paths:
      - 'apps/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/**'

# Add concurrency control
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  packages: write

jobs:
  build-and-push:
    name: Build, Push & Update per App
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: [pod-info-app, pod-info-monitor]  # ← static list of your apps

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip if no changes in this app
        id: check_changes
        run: |
          git diff --quiet ${{ github.event.before }} ${{ github.sha }} -- apps/${{ matrix.app }} \
            && echo "skip=true" >> $GITHUB_OUTPUT \
            || echo "skip=false" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        if: steps.check_changes.outputs.skip == 'false'
        uses: docker/setup-buildx-action@v3.0.0

      - name: Cache Docker layers
        if: steps.check_changes.outputs.skip == 'false'
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.app }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.app }}-

      - name: Login to DockerHub
        if: steps.check_changes.outputs.skip == 'false'
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Bump Semantic Version
        if: steps.check_changes.outputs.skip == 'false'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
          tag_prefix: "${{ matrix.app }}_v"
          create_annotated_tag: true
          fetch_all_tags: true

      - name: Build & Push Docker image
        if: steps.check_changes.outputs.skip == 'false'
        uses: docker/build-push-action@v5.0.0
        with:
          context: ./apps/${{ matrix.app }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ steps.tag_version.outputs.new_tag }}

      - name: Scan Image with Trivy
        if: steps.check_changes.outputs.skip == 'false'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ steps.tag_version.outputs.new_tag }}
          severity: CRITICAL

      - name: Update terraform.tfvars
        if: steps.check_changes.outputs.skip == 'false'
        run: |
          app="${{ matrix.app }}"
          tag="${{ steps.tag_version.outputs.new_tag }}"
          file="terraform/live/terraform.tfvars"
          esc=$(printf '%s' "$app" | sed 's/[][\/.^$*]/\\&/g')
          sed -i "/$esc *= *{/,/}/s/\(tag *= *\).*/\1\"$tag\"/" "$file"

      - name: Commit tfvars bump
        if: steps.check_changes.outputs.skip == 'false'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b bump-${{ matrix.app }}-${{ steps.tag_version.outputs.new_tag }}
          git add terraform/live/terraform.tfvars
          git commit -m "chore: bump ${{ matrix.app }} image tag to ${{ steps.tag_version.outputs.new_tag }}"

      - name: Open PR for tfvars bump
        if: steps.check_changes.outputs.skip == 'false'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: bump-${{ matrix.app }}-${{ steps.tag_version.outputs.new_tag }}
          base: main
          commit-message: "chore: bump ${{ matrix.app }} image tag to ${{ steps.tag_version.outputs.new_tag }}"
          title: "chore: bump ${{ matrix.app }} image tag to ${{ steps.tag_version.outputs.new_tag }}"
          body: |
            This PR was opened automatically by CI to update the image tag for **${{ matrix.app }}**  
            New tag: `${{ steps.tag_version.outputs.new_tag }}`  
          labels: automated-pr, tfvars
          delete-branch: false
