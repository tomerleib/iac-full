name: Build and Release Apps

on:
  push:
    branches: [main]
    paths:
      - 'apps/**'
  pull_request:
    branches: [main]
    paths:
      - 'apps/**'

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  build-and-release:
    name: Build and Release per App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [pod-info-app, pod-info-monitor]
    outputs:
      apps_built: ${{ steps.set-built-apps.outputs.apps_built }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 2

      - name: Check for Changes
        id: check_changes
        run: |
          set -e
          if git diff --quiet HEAD^ HEAD -- apps/${{ matrix.app }}; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Docker
        if: steps.check_changes.outputs.skip == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: steps.check_changes.outputs.skip == 'false'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Bump Semantic Version
        if: steps.check_changes.outputs.skip == 'false'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          default_bump: patch
          tag_prefix: "v"
          create_annotated_tag: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        if: steps.check_changes.outputs.skip == 'false'
        uses: docker/build-push-action@v5
        with:
          context: ./apps/${{ matrix.app }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ steps.tag_version.outputs.new_tag }}

      - name: Scan Image with Trivy
        if: steps.check_changes.outputs.skip == 'false'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.app }}:${{ steps.tag_version.outputs.new_tag }}
          severity: CRITICAL

      - name: Update terraform.tfvars
        if: steps.check_changes.outputs.skip == 'false'
        run: |
          app_name=${{ matrix.app }}
          new_tag=${{ steps.tag_version.outputs.new_tag }}
          tfvars_file="terraform/live/terraform.tfvars"

          echo "Updating $app_name in $tfvars_file with tag $new_tag"
          escaped_app_name=$(printf '%s\n' "$app_name" | sed 's/[][\/.^$*]/\\&/g')
          sed -i "/$escaped_app_name\s*=/,/}/s/\(tag\s*=\s*\).*/\1\"$new_tag\"/" "$tfvars_file"

      - name: Set built apps output
        id: set-built-apps
        run: |
          if [ "${{ steps.check_changes.outputs.skip }}" == "false" ]; then
            echo "${{ matrix.app }}" >> built_apps.txt
          fi

      - name: Upload built apps
        if: steps.check_changes.outputs.skip == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: built-apps
          path: built_apps.txt
          if-no-files-found: ignore

  commit-updates:
    name: Commit and Push tfvars
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download built apps
        uses: actions/download-artifact@v4
        with:
          name: built-apps
          path: .

      - name: Commit tfvars update
        run: |
          if [ -f built_apps.txt ]; then
            apps=$(paste -sd "," built_apps.txt)
            echo "Built apps: $apps"

            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

            git add terraform/live/terraform.tfvars
            git commit -m "chore: update image tags for: $apps"
            git push origin main
          else
            echo "No apps built. Skipping commit."
          fi
